{
  "address": "0x9c12A076Cc3BA0b8dc137fe7c7Bb4c075679aae3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ethUsdPriceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Donators",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "Version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addressOfContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_value",
          "type": "int256"
        }
      ],
      "name": "ethToUsdConverter",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xfd9604c240d7d3a56633f846d8eb3735c5cc1984871af8df5ef32e0c8afe1a03",
  "receipt": {
    "to": null,
    "from": "0xC81d6a1c5e539313927e1E0d3e1177379CeE8DE9",
    "contractAddress": "0x9c12A076Cc3BA0b8dc137fe7c7Bb4c075679aae3",
    "transactionIndex": 23,
    "gasUsed": "897832",
    "logsBloom": "0x
    "blockHash": "0x837305103c4197ced4ab5d1f90fcd263820cbcb4fe6bc0528aac2741ff511156",
    "transactionHash": "0xfd9604c240d7d3a56633f846d8eb3735c5cc1984871af8df5ef32e0c8afe1a03",
    "logs": [
      {
        "transactionIndex": 23,
        "blockNumber": 8228062,
        "transactionHash": "0xfd9604c240d7d3a56633f846d8eb3735c5cc1984871af8df5ef32e0c8afe1a03",
        "address": "0x9c12A076Cc3BA0b8dc137fe7c7Bb4c075679aae3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c81d6a1c5e539313927e1e0d3e1177379cee8de9"
        ],
        "data": "0x",
        "logIndex": 47,
        "blockHash": "0x837305103c4197ced4ab5d1f90fcd263820cbcb4fe6bc0528aac2741ff511156"
      }
    ],
    "blockNumber": 8228062,
    "cumulativeGasUsed": "6129521",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 5,
  "solcInputHash": "f94911f328f6241b8aaba22158e2990f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethUsdPriceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Donators\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"Version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressOfContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_value\",\"type\":\"int256\"}],\"name\":\"ethToUsdConverter\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ethToUsdConverter(int256)\":{\"details\":\"here price variable will get 18 decimal place's value, so we deviding it by 1e18 so that we can get the exact ETH price in USD.\"},\"getLatestPrice()\":{\"details\":\"as we know getLatestPrice() returns 8 decimal palces, here we multiplying the returned value with 10 decimal places to make it 18 decimal value.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fund.sol\":\"Fund\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Fund.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract Fund is Ownable {\\n    event Donators(address indexed _donator, uint256 indexed _value);\\n    mapping(address => uint256) donators;\\n    address payable _owner;\\n\\n    AggregatorV3Interface internal priceFeed;\\n\\n    constructor(address _ethUsdPriceFeedAddress) {\\n        _owner = payable(msg.sender);\\n        priceFeed = AggregatorV3Interface(_ethUsdPriceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value >= 0.01 ether, \\\"Minimum amount to donate is 0.01 ether :)\\\");\\n\\n        donators[msg.sender] = msg.value;\\n        emit Donators(msg.sender, msg.value);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        require(msg.sender == _owner, \\\"You can't withdraw fund!\\\");\\n\\n        _owner.transfer(address(this).balance);\\n        address(this).balance == 0;\\n    }\\n\\n    /**\\n     * @dev as we know getLatestPrice() returns 8 decimal palces, here we multiplying the returned value with 10 decimal places to make it 18 decimal value.\\n     */\\n    function getLatestPrice() public view returns (int256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return (price * 1e10);\\n    }\\n\\n    /**\\n     * @dev here price variable will get 18 decimal place's value, so we deviding it by 1e18 so that we can get the exact ETH price in USD.\\n     */\\n    function ethToUsdConverter(int256 _value) external view returns (int256) {\\n        int256 price = getLatestPrice();\\n        return (_value * price) / 1e18;\\n    }\\n\\n    function addressOfContract() public view returns (address) {\\n        return address(this);\\n    }\\n\\n    function decimals() external pure returns (uint8) {\\n        return 18;\\n    }\\n\\n    function Version() external view returns (uint256) {\\n        return priceFeed.version();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xb9416aee7b9c0dc3d7f80d18a35e2deea1338dabb28a06ea766d0a3038908089\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200104a3803806200104a833981810160405281019062000037919062000216565b620000576200004b620000e060201b60201c565b620000e860201b60201c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000248565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001de82620001b1565b9050919050565b620001f081620001d1565b8114620001fc57600080fd5b50565b6000815190506200021081620001e5565b92915050565b6000602082840312156200022f576200022e620001ac565b5b60006200023f84828501620001ff565b91505092915050565b610df280620002586000396000f3fe6080604052600436106100955760003560e01c8063a3cb1d9411610059578063a3cb1d941461015d578063b60d428814610188578063bb62860d14610192578063c24363e9146101bd578063f2fde38b146101fa576100a4565b8063313ce567146100ae5780633ccfd60b146100d9578063715018a6146100f05780638da5cb5b146101075780638e15f47314610132576100a4565b366100a4576100a2610223565b005b6100ac610223565b005b3480156100ba57600080fd5b506100c36102f7565b6040516100d091906107ae565b60405180910390f35b3480156100e557600080fd5b506100ee610300565b005b3480156100fc57600080fd5b50610105610403565b005b34801561011357600080fd5b5061011c610417565b604051610129919061080a565b60405180910390f35b34801561013e57600080fd5b50610147610440565b604051610154919061083e565b60405180910390f35b34801561016957600080fd5b506101726104f1565b60405161017f919061080a565b60405180910390f35b610190610223565b005b34801561019e57600080fd5b506101a76104f9565b6040516101b49190610872565b60405180910390f35b3480156101c957600080fd5b506101e460048036038101906101df91906108be565b610591565b6040516101f1919061083e565b60405180910390f35b34801561020657600080fd5b50610221600480360381019061021c9190610917565b6105c5565b005b662386f26fc1000034101561026d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610264906109c7565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550343373ffffffffffffffffffffffffffffffffffffffff167f7d06cdba4e3c042556a96e067d211cd5750a15a1e1d046244b483b0eca591b6260405160405180910390a3565b60006012905090565b610308610648565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038f90610a33565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610400573d6000803e3d6000fd5b50565b61040b610648565b61041560006106c6565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d49190610ad6565b5050509150506402540be400816104eb9190610b80565b91505090565b600030905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190610bf8565b905090565b60008061059c610440565b9050670de0b6b3a764000081846105b39190610b80565b6105bd9190610c54565b915050919050565b6105cd610648565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063390610d30565b60405180910390fd5b610645816106c6565b50565b61065061078a565b73ffffffffffffffffffffffffffffffffffffffff1661066e610417565b73ffffffffffffffffffffffffffffffffffffffff16146106c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bb90610d9c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600060ff82169050919050565b6107a881610792565b82525050565b60006020820190506107c3600083018461079f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f4826107c9565b9050919050565b610804816107e9565b82525050565b600060208201905061081f60008301846107fb565b92915050565b6000819050919050565b61083881610825565b82525050565b6000602082019050610853600083018461082f565b92915050565b6000819050919050565b61086c81610859565b82525050565b60006020820190506108876000830184610863565b92915050565b600080fd5b61089b81610825565b81146108a657600080fd5b50565b6000813590506108b881610892565b92915050565b6000602082840312156108d4576108d361088d565b5b60006108e2848285016108a9565b91505092915050565b6108f4816107e9565b81146108ff57600080fd5b50565b600081359050610911816108eb565b92915050565b60006020828403121561092d5761092c61088d565b5b600061093b84828501610902565b91505092915050565b600082825260208201905092915050565b7f4d696e696d756d20616d6f756e7420746f20646f6e61746520697320302e303160008201527f206574686572203a290000000000000000000000000000000000000000000000602082015250565b60006109b1602983610944565b91506109bc82610955565b604082019050919050565b600060208201905081810360008301526109e0816109a4565b9050919050565b7f596f752063616e27742077697468647261772066756e64210000000000000000600082015250565b6000610a1d601883610944565b9150610a28826109e7565b602082019050919050565b60006020820190508181036000830152610a4c81610a10565b9050919050565b600069ffffffffffffffffffff82169050919050565b610a7281610a53565b8114610a7d57600080fd5b50565b600081519050610a8f81610a69565b92915050565b600081519050610aa481610892565b92915050565b610ab381610859565b8114610abe57600080fd5b50565b600081519050610ad081610aaa565b92915050565b600080600080600060a08688031215610af257610af161088d565b5b6000610b0088828901610a80565b9550506020610b1188828901610a95565b9450506040610b2288828901610ac1565b9350506060610b3388828901610ac1565b9250506080610b4488828901610a80565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b8b82610825565b9150610b9683610825565b9250828202610ba481610825565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610bdc57610bdb610b51565b5b8282058414831517610bf157610bf0610b51565b5b5092915050565b600060208284031215610c0e57610c0d61088d565b5b6000610c1c84828501610ac1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c5f82610825565b9150610c6a83610825565b925082610c7a57610c79610c25565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610cb357610cb2610b51565b5b828205905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d1a602683610944565b9150610d2582610cbe565b604082019050919050565b60006020820190508181036000830152610d4981610d0d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d86602083610944565b9150610d9182610d50565b602082019050919050565b60006020820190508181036000830152610db581610d79565b905091905056fea26469706673582212204a92be3c053f1b3a99780eba8b6cb0e16fc2afa6bbf5ff7a636201c4724fe72064736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c8063a3cb1d9411610059578063a3cb1d941461015d578063b60d428814610188578063bb62860d14610192578063c24363e9146101bd578063f2fde38b146101fa576100a4565b8063313ce567146100ae5780633ccfd60b146100d9578063715018a6146100f05780638da5cb5b146101075780638e15f47314610132576100a4565b366100a4576100a2610223565b005b6100ac610223565b005b3480156100ba57600080fd5b506100c36102f7565b6040516100d091906107ae565b60405180910390f35b3480156100e557600080fd5b506100ee610300565b005b3480156100fc57600080fd5b50610105610403565b005b34801561011357600080fd5b5061011c610417565b604051610129919061080a565b60405180910390f35b34801561013e57600080fd5b50610147610440565b604051610154919061083e565b60405180910390f35b34801561016957600080fd5b506101726104f1565b60405161017f919061080a565b60405180910390f35b610190610223565b005b34801561019e57600080fd5b506101a76104f9565b6040516101b49190610872565b60405180910390f35b3480156101c957600080fd5b506101e460048036038101906101df91906108be565b610591565b6040516101f1919061083e565b60405180910390f35b34801561020657600080fd5b50610221600480360381019061021c9190610917565b6105c5565b005b662386f26fc1000034101561026d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610264906109c7565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550343373ffffffffffffffffffffffffffffffffffffffff167f7d06cdba4e3c042556a96e067d211cd5750a15a1e1d046244b483b0eca591b6260405160405180910390a3565b60006012905090565b610308610648565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038f90610a33565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610400573d6000803e3d6000fd5b50565b61040b610648565b61041560006106c6565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d49190610ad6565b5050509150506402540be400816104eb9190610b80565b91505090565b600030905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190610bf8565b905090565b60008061059c610440565b9050670de0b6b3a764000081846105b39190610b80565b6105bd9190610c54565b915050919050565b6105cd610648565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063390610d30565b60405180910390fd5b610645816106c6565b50565b61065061078a565b73ffffffffffffffffffffffffffffffffffffffff1661066e610417565b73ffffffffffffffffffffffffffffffffffffffff16146106c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bb90610d9c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600060ff82169050919050565b6107a881610792565b82525050565b60006020820190506107c3600083018461079f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f4826107c9565b9050919050565b610804816107e9565b82525050565b600060208201905061081f60008301846107fb565b92915050565b6000819050919050565b61083881610825565b82525050565b6000602082019050610853600083018461082f565b92915050565b6000819050919050565b61086c81610859565b82525050565b60006020820190506108876000830184610863565b92915050565b600080fd5b61089b81610825565b81146108a657600080fd5b50565b6000813590506108b881610892565b92915050565b6000602082840312156108d4576108d361088d565b5b60006108e2848285016108a9565b91505092915050565b6108f4816107e9565b81146108ff57600080fd5b50565b600081359050610911816108eb565b92915050565b60006020828403121561092d5761092c61088d565b5b600061093b84828501610902565b91505092915050565b600082825260208201905092915050565b7f4d696e696d756d20616d6f756e7420746f20646f6e61746520697320302e303160008201527f206574686572203a290000000000000000000000000000000000000000000000602082015250565b60006109b1602983610944565b91506109bc82610955565b604082019050919050565b600060208201905081810360008301526109e0816109a4565b9050919050565b7f596f752063616e27742077697468647261772066756e64210000000000000000600082015250565b6000610a1d601883610944565b9150610a28826109e7565b602082019050919050565b60006020820190508181036000830152610a4c81610a10565b9050919050565b600069ffffffffffffffffffff82169050919050565b610a7281610a53565b8114610a7d57600080fd5b50565b600081519050610a8f81610a69565b92915050565b600081519050610aa481610892565b92915050565b610ab381610859565b8114610abe57600080fd5b50565b600081519050610ad081610aaa565b92915050565b600080600080600060a08688031215610af257610af161088d565b5b6000610b0088828901610a80565b9550506020610b1188828901610a95565b9450506040610b2288828901610ac1565b9350506060610b3388828901610ac1565b9250506080610b4488828901610a80565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b8b82610825565b9150610b9683610825565b9250828202610ba481610825565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610bdc57610bdb610b51565b5b8282058414831517610bf157610bf0610b51565b5b5092915050565b600060208284031215610c0e57610c0d61088d565b5b6000610c1c84828501610ac1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c5f82610825565b9150610c6a83610825565b925082610c7a57610c79610c25565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610cb357610cb2610b51565b5b828205905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d1a602683610944565b9150610d2582610cbe565b604082019050919050565b60006020820190508181036000830152610d4981610d0d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d86602083610944565b9150610d9182610d50565b602082019050919050565b60006020820190508181036000830152610db581610d79565b905091905056fea26469706673582212204a92be3c053f1b3a99780eba8b6cb0e16fc2afa6bbf5ff7a636201c4724fe72064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "ethToUsdConverter(int256)": {
        "details": "here price variable will get 18 decimal place's value, so we deviding it by 1e18 so that we can get the exact ETH price in USD."
      },
      "getLatestPrice()": {
        "details": "as we know getLatestPrice() returns 8 decimal palces, here we multiplying the returned value with 10 decimal places to make it 18 decimal value."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Fund.sol:Fund",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 196,
        "contract": "contracts/Fund.sol:Fund",
        "label": "donators",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 198,
        "contract": "contracts/Fund.sol:Fund",
        "label": "_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address_payable"
      },
      {
        "astId": 201,
        "contract": "contracts/Fund.sol:Fund",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}